{"version":3,"sources":["utils/date.js","components/DeletePersonConfirm.js","components/PersonList.js","components/PersonForm.js","App.js","index.js"],"names":["formatDateToBrStandard","date","split","DeletePersonConfirm","props","className","role","aria-modal","aria-labelledby","xmlns","fill","viewBox","stroke","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","id","person","name","type","onClick","deletePerson","closeModal","PersonList","state","modalIsOpen","personToBeDeleted","setIsOpen","value","setState","openModal","this","loadPersons","setCurrentPerson","scope","persons","map","src","alt","email","gender","birthDate","placeOfBirth","nationality","cpf","Date","createdAt","toLocaleString","updatedAt","handleEditClick","handleDeleteClick","isOpen","onRequestClose","style","content","border","top","left","right","bottom","marginRight","transform","React","Component","PersonForm","yup","mixed","default","required","string","schema","shape","notRequired","useForm","resolver","yupResolver","register","errors","handleSubmit","useState","errorsFromBackEnd","setErrorsFromBackEnd","currentPerson","setPerson","handleChange","e","target","onSubmit","data","savePerson","then","obj","Object","keys","forEach","prop","message","method","htmlFor","defaultValue","onChange","maxLength","ref","autoComplete","max","toISOString","Modal","setAppElement","App","apiPath","axiosConfig","auth","username","password","setPersons","axios","get","res","personId","delete","verb","catch","error","response","assign","ReactDOM","render","document","getElementById"],"mappings":"weAAaA,EAAyB,SAACC,GACnC,IAAIC,EAAQD,EAAKC,MAAM,KACvB,OAAOA,EAAM,GAAK,IAAMA,EAAM,GAAK,IAAMA,EAAM,I,OCmCpCC,EArCa,SAACC,GAKzB,OACI,sBAAKC,UAAU,mKAAmKC,KAAK,SAASC,aAAW,OAAOC,kBAAgB,iBAAlO,UACI,qBAAKH,UAAU,0CAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,mHAAf,SACI,qBAAKA,UAAU,uBAAuBI,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAeC,cAAY,OAA3I,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,6IAG7E,sBAAKZ,UAAU,gDAAf,UACI,qBAAIA,UAAU,8CAA8Ca,GAAG,iBAA/D,sBACcd,EAAMe,OAAOC,KAD3B,OAGA,qBAAKf,UAAU,OAAf,SACI,mBAAGA,UAAU,wBAAb,gEAMhB,sBAAKA,UAAU,2DAAf,UACI,wBAAQgB,KAAK,SAASC,QAAS,WAxBvClB,EAAMmB,aAAanB,EAAMe,OAAOD,IAChCd,EAAMoB,cAuBgEnB,UAAU,8PAAxE,qBAGA,wBAAQgB,KAAK,SAASC,QAAS,WAAQlB,EAAMoB,cAAenB,UAAU,4QAAtE,6BCxBKoB,E,4MACjBC,MAAQ,CACJC,aAAa,EACbC,kBAAmB,I,EAOvBC,UAAY,SAACC,GACT,EAAKC,SAAS,CAAEJ,YAAaG,K,EAGjCE,UAAY,kBAAM,EAAKH,WAAU,I,EACjCL,WAAa,kBAAM,EAAKK,WAAU,I,uDATlC,WACII,KAAK7B,MAAM8B,gB,6BAUf,SAAgBf,GACZc,KAAK7B,MAAM+B,iBAAiBhB,GAC5Bc,KAAK7B,MAAM4B,c,+BAGf,SAAkBb,GACdc,KAAKF,SAAS,CAAEH,kBAAmBT,IACnCc,KAAKD,c,oBAGT,WAAU,IAAD,OACL,OAAO,sBAAK3B,UAAU,gBAAf,UACH,qBAAKA,UAAU,0CAAf,SACI,qBAAKA,UAAU,4DAAf,SACI,qBAAKA,UAAU,gEAAf,SACI,wBAAOA,UAAU,sCAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BACI,oBAAI+B,MAAM,MAAM/B,UAAU,iFAA1B,kBAGA,oBAAI+B,MAAM,MAAM/B,UAAU,iFAA1B,oBAGA,oBAAI+B,MAAM,MAAM/B,UAAU,iFAA1B,kBAGA,oBAAI+B,MAAM,MAAM/B,UAAU,iFAA1B,gCAGA,oBAAI+B,MAAM,MAAM/B,UAAU,iFAA1B,0BAGA,oBAAI+B,MAAM,MAAM/B,UAAU,iFAA1B,2BAGA,oBAAI+B,MAAM,MAAM/B,UAAU,iFAA1B,iBAGA,oBAAI+B,MAAM,MAAM/B,UAAU,iFAA1B,mCAGA,oBAAI+B,MAAM,MAAM/B,UAAU,iFAA1B,yCAGA,oBAAI+B,MAAM,MAAM/B,UAAU,iFAA1B,8BAKR,uBAAOA,UAAU,oCAAjB,SACK4B,KAAK7B,MAAMiC,QAAQC,KAAI,SAACnB,GACrB,OAAO,+BACH,oBAAId,UAAU,8BAAd,SACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,yBAAyBkC,IAAI,2BAA2BC,IAAI,OAE/E,qBAAKnC,UAAU,OAAf,SACI,qBAAKA,UAAU,oDAAf,SACKc,EAAOC,cAKxB,oBAAIf,UAAU,oDAAd,SACKc,EAAOsB,QAEZ,oBAAIpC,UAAU,oDAAd,SACK,CAAE,EAAK,YAAa,EAAK,WAAY,GAAM,cAAcc,EAAOuB,UAErE,oBAAIrC,UAAU,oDAAd,SACKL,EAAuBmB,EAAOwB,aAEnC,oBAAItC,UAAU,oDAAd,SACKc,EAAOyB,eAEZ,oBAAIvC,UAAU,oDAAd,SACKc,EAAO0B,cAEZ,oBAAIxC,UAAU,oDAAd,SACKc,EAAO2B,MAEZ,oBAAIzC,UAAU,oDAAd,SACK,IAAI0C,KAAK5B,EAAO6B,WAAWC,eAAe,WAE/C,oBAAI5C,UAAU,oDAAd,SACK,IAAI0C,KAAK5B,EAAO+B,WAAWD,eAAe,WAE/C,qBAAI5C,UAAU,oDAAd,UACI,wBACAiB,QAAS,kBAAM,EAAK6B,gBAAgBhC,IACpCd,UAAU,yOAFV,oBAKA,wBACAiB,QAAS,kBAAM,EAAK8B,kBAAkBjC,IACtCd,UAAU,2NAFV,0BA3CQc,EAAOD,kBAwD/C,cAAC,IAAD,CACImC,OAAQpB,KAAKP,MAAMC,YACnB2B,eAAgBrB,KAAKT,WACrB+B,MAAO,CACHC,QAAS,CACLC,OAAQ,EACRC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAXvB,SAeI,cAAC,EAAD,CAAqBxC,aAAcU,KAAK7B,MAAMmB,aAAcJ,OAAQc,KAAKP,MAAME,kBAAmBJ,WAAYS,KAAKT,sB,GA5I3FwC,IAAMC,W,yCC4K/BC,EA5KI,SAAC9D,GAAW,IAAD,YAC1B+D,IAAc,CACVC,MAAO,CACHC,QAAS,wBACTC,SAAU,uBACVrE,KAAM,oBAEVsE,OAAQ,CACJ9B,MAAO,wBAGf,IAAM+B,EAASL,MAAaM,MAAM,CAC9BvD,GAAIiD,MAAaO,cACjBhC,OAAQyB,MAAaO,cACrB7B,YAAasB,MAAaO,cAC1B9B,aAAcuB,MAAaO,cAC3BtD,KAAM+C,MAAaG,WACnB7B,MAAO0B,MAAa1B,QACpBE,UAAWwB,MAAaG,WACxBxB,IAAKqB,MAAaG,aAnBI,EAsBiBK,YAAQ,CAC/CC,SAAUC,sBAAYL,KADlBM,EAtBkB,EAsBlBA,SAAUC,EAtBQ,EAsBRA,OAAQC,EAtBA,EAsBAA,aAtBA,EA0BwBhB,IAAMiB,SAAS,IA1BvC,mBA0BnBC,EA1BmB,KA0BAC,EA1BA,KAsCpBC,EAAgBhF,EAAMe,OAtCF,EAuCE6C,IAAMiB,SAASG,GAvCjB,mBAuCnBjE,EAvCmB,KAuCXkE,EAvCW,KAyCpBC,EAAe,SAAAC,GAAM,IAAD,EACEA,EAAEC,OAAlBpE,EADc,EACdA,KAAMU,EADQ,EACRA,MACduD,EAAU,2BAAKlE,GAAN,kBAAeC,EAAOU,MAGnC,OACI,qBAAKzB,UAAU,gBAAf,SACI,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,sBAAMoF,SAAUT,GAvBf,SAAAU,GACWtF,EAAMuF,WAAWD,GACvBE,MAAK,SAAAb,GACnB,IAAIc,EAAM,GACVC,OAAOC,KAAKhB,GAAQiB,SAAQ,SAAUC,GAClCJ,EAAII,GAAQ,CAAEC,QAASnB,EAAOkB,IAC9Bd,EAAqBU,YAiBuBM,OAAO,OAA/C,SACI,sBAAK9F,UAAU,uCAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,uBAAO+F,QAAQ,OAAO/F,UAAU,0CAAhC,kBACA,uBACAgG,aAAcjB,EAAchE,KAC5BkF,SAAUhB,EACViB,UAAU,MACVlF,KAAK,OACLD,KAAK,OACLF,GAAG,OACHsF,IAAK1B,EACL2B,aAAa,aACbpG,UAAU,oHACV,mBAAGA,UAAU,eAAb,mBAA6B0E,EAAO3D,YAApC,aAA6B,EAAa8E,aAE9C,sBAAK7F,UAAU,2BAAf,UACI,uBAAO+F,QAAQ,QAAQ/F,UAAU,0CAAjC,oBACA,uBACAgG,aAAcjB,EAAc3C,MAC5B6D,SAAUhB,EACViB,UAAU,MACVlF,KAAK,OACLD,KAAK,QACLF,GAAG,QACHsF,IAAK1B,EACL2B,aAAa,QACbpG,UAAU,oHACV,mBAAGA,UAAU,eAAb,mBAA6B0E,EAAOtC,aAApC,aAA6B,EAAcyD,aAE/C,sBAAK7F,UAAU,2BAAf,UACI,uBAAO+F,QAAQ,SAAS/F,UAAU,0CAAlC,kBACA,yBACAgG,aAAcjB,EAAc1C,OAC5B4D,SAAUhB,EACVpE,GAAG,SACHsF,IAAK1B,EACL1D,KAAK,SACLqF,aAAa,SACbpG,UAAU,+JAPV,UAQI,wBAAQyB,MAAM,KACd,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,KAAd,8BAGR,sBAAKzB,UAAU,2BAAf,UACI,uBAAO+F,QAAQ,YAAY/F,UAAU,0CAArC,gCACA,uBACIqG,KAAK,IAAI3D,MAAO4D,cAAczG,MAAM,KAAK,GAC7CmG,aAAcjB,EAAczC,UAC5B2D,SAAUhB,EACVjE,KAAK,OACLD,KAAK,YACLF,GAAG,YACHsF,IAAK1B,EACL2B,aAAa,YACbpG,UAAU,oHACV,mBAAGA,UAAU,eAAb,mBAA6B0E,EAAOpC,iBAApC,aAA6B,EAAkBuD,UAC/C,mBAAG7F,UAAU,eAAb,mBAA6B6E,EAAkBvC,iBAA/C,aAA6B,EAA6BuD,aAE9D,sBAAK7F,UAAU,yCAAf,UACI,uBAAO+F,QAAQ,eAAe/F,UAAU,0CAAxC,0BACA,uBACAgG,aAAcjB,EAAcxC,aAC5B0D,SAAUhB,EACViB,UAAU,MACVlF,KAAK,OACLD,KAAK,eACLF,GAAG,eACHsF,IAAK1B,EACL2B,aAAa,iBACbpG,UAAU,uHAGd,sBAAKA,UAAU,yCAAf,UACI,uBAAO+F,QAAQ,cAAc/F,UAAU,0CAAvC,2BACA,uBACAgG,aAAcjB,EAAcvC,YAC5ByD,SAAUhB,EACViB,UAAU,MACVlF,KAAK,OACLD,KAAK,cACLF,GAAG,cACHsF,IAAK1B,EACLzE,UAAU,uHAGd,sBAAKA,UAAU,yCAAf,UACI,uBAAO+F,QAAQ,MAAM/F,UAAU,0CAA/B,iBACA,uBACAgG,aAAcjB,EAActC,IAC5BwD,SAAUhB,EACViB,UAAU,KACVlF,KAAK,OACLD,KAAK,MACLF,GAAG,MACHsF,IAAK1B,EACLzE,UAAU,oHACV,mBAAGA,UAAU,eAAb,mBAA6B0E,EAAOjC,WAApC,aAA6B,EAAYoD,UACzC,mBAAG7F,UAAU,eAAb,mBAA6B6E,EAAkBpC,WAA/C,aAA6B,EAAuBoD,kBAIhE,sBAAK7F,UAAU,0CAAf,UACI,wBACIiB,QAAS,kBAAMlB,EAAMoB,cACrBnB,UAAU,gOAFd,sBAKA,uBAAOyB,MAAM,SAAST,KAAK,SAAShB,UAAU,gRChK9EuG,IAAMC,cAAc,SAEpB,IAmGeC,EAnGH,WACR,IAAMC,EAAU,kBACVC,EAAc,CAAEC,KAAM,CAAEC,SAAU,QAASC,SAAU,UAF7C,EAGmBnD,IAAMiB,UAAS,GAHlC,mBAGPtD,EAHO,KAGME,EAHN,OAIgBmC,IAAMiB,SAAS,IAJ/B,mBAIP5C,EAJO,KAIE+E,EAJF,OAK4BpD,IAAMiB,SAAS,IAL3C,mBAKPG,EALO,KAKQjD,EALR,KAMRH,EAAY,kBAAMH,GAAU,IAC5BL,EAAa,kBAAMK,GAAU,IAE7BK,EAAc,WAChBmF,IAAMC,IAAIP,EAASC,GACdpB,MAAK,SAAA2B,GACFH,EAAWG,EAAI7B,MACflE,QAkCZ,OACI,gCACI,qBAAKnB,UAAU,cAAf,SACI,qBAAKA,UAAU,yCAAf,SACI,qBAAKA,UAAU,yCAAf,SACI,qBAAKA,UAAU,+BAI3B,wBAAQA,UAAU,kBAAlB,SACI,qBAAKA,UAAU,+CAAf,SACI,oBAAIA,UAAU,mCAAd,qCAKR,iCACI,qBAAKA,UAAU,0CAAf,SACI,sBAAKA,UAAU,eAAf,UACI,wBAAQiB,QAAS,kBAvBjCa,EAAiB,SACjBH,KAsB8DX,KAAK,SAAShB,UAAU,oOAAtE,mBAGA,cAAC,EAAD,CACAgC,QAASA,EACTF,iBAAkBA,EAClBH,UAAWA,EACXE,YAAaA,EACbX,aAzDC,SAACiG,GAClBH,IAAMI,OAAOV,EAAU,IAAMS,EAAUR,GAClCpB,MAAK,SAAA2B,GACFrF,eA0DA,cAAC,IAAD,CACImB,OAAQ1B,EACR2B,eAAgB9B,EAChB+B,MAAO,CACHC,QAAS,CACLE,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAVvB,SAcI,cAAC,EAAD,CAAY4B,WApET,SAAAxE,GACf,IAAIuG,EAAO,OAKX,OAJItC,EAAclE,KACdC,EAAOD,GAAKkE,EAAclE,GAC1BwG,EAAO,OAEJL,IAAMK,GAAMX,GAAoB,QAATW,EAAiB,IAAMtC,EAAclE,GAAK,IAAKC,EAAQ6F,GAChFpB,MAAK,SAAA2B,GAEF,OADArF,IACO,MAEVyF,OAAM,SAASC,GACZ,GAAIA,EAAMC,SACN,OAAO/B,OAAOgC,OAAO,GAAIF,EAAMC,SAASnC,UAuDJvE,OAAQiE,EAAe5D,WAAYA,a,OCjG3FuG,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.16e8a7ff.chunk.js","sourcesContent":["export const formatDateToBrStandard = (date) => {\n    let split = date.split('-');\n    return split[2] + '/' + split[1] + '/' + split[0];\n}","const DeletePersonConfirm = (props) => {\n    const handleDeleteClick = () => {\n        props.deletePerson(props.person.id);\n        props.closeModal();\n    }\n    return (\n        <div className=\" inline-block border align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n            <div className=\"bg-white  px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                <div className=\"sm:flex sm:items-start\">\n                    <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                        <svg className=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                        </svg>\n                    </div>\n                    <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                        <h3 className=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-headline\">\n                            Deletar: {props.person.name}?\n                        </h3>\n                        <div className=\"mt-2\">\n                            <p className=\"text-sm text-gray-500\">\n                                Essa ação não pode ser revetida</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                <button type=\"button\" onClick={() => { handleDeleteClick() }} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                    Deletar\n                </button>\n                <button type=\"button\" onClick={() => { props.closeModal()}} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                    Cancelar\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default DeletePersonConfirm","import React from 'react';\nimport { formatDateToBrStandard } from '../utils/date.js';\nimport DeletePersonConfirm from './DeletePersonConfirm';\nimport Modal from 'react-modal';\n\nexport default class PersonList extends React.Component {\n    state = {\n        modalIsOpen: false,\n        personToBeDeleted: {}\n    }\n\n    componentDidMount() {\n        this.props.loadPersons();\n    }\n\n    setIsOpen = (value) => {\n        this.setState({ modalIsOpen: value});\n    }\n\n    openModal = () => this.setIsOpen(true)\n    closeModal = () => this.setIsOpen(false)\n\n    handleEditClick(person) {\n        this.props.setCurrentPerson(person)\n        this.props.openModal()\n    }\n\n    handleDeleteClick(person) {\n        this.setState({ personToBeDeleted: person});\n        this.openModal();\n    }\n\n    render() {\n        return <div className=\"flex flex-col\">\n            <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                    <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                                <tr>\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        Nome\n                                    </th>\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        E-mail\n                                    </th>\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        Sexo\n                                    </th>\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        Data de Nascimento\n                                    </th>\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        Naturalidade\n                                    </th>\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        Nacionalidade\n                                    </th>\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        CPF\n                                    </th>\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        Data de criação\n                                    </th>\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        Última atualização\n                                    </th>\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        Ações\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                                {this.props.persons.map((person) => {\n                                    return <tr key={person.id}>\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"flex-shrink-0 h-10 w-10\">\n                                                    <img className=\"h-10 w-10 rounded-full\" src=\"/default-user-image.webp\" alt=\"\" />\n                                                </div>\n                                                <div className=\"ml-4\">\n                                                    <div className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                                        {person.name}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                            {person.email}\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                            {{ \"M\": \"Masculino\", \"F\": \"Feminino\", \"NI\": \"Indefinido\"}[person.gender]}\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                            {formatDateToBrStandard(person.birthDate)}\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                            {person.placeOfBirth}\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                            {person.nationality}\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                            {person.cpf}\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                            {new Date(person.createdAt).toLocaleString(\"pt-BR\")}\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                            {new Date(person.updatedAt).toLocaleString(\"pt-BR\")}\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                            <button\n                                            onClick={() => this.handleEditClick(person)}\n                                            className=\"mb-4 mr-2 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                                Editar\n                                            </button>\n                                            <button\n                                            onClick={() => this.handleDeleteClick(person)}\n                                            className=\"mb-4 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\">\n                                                Deletar\n                                            </button>\n                                        </td>\n                                    </tr>\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            <Modal\n                isOpen={this.state.modalIsOpen}\n                onRequestClose={this.closeModal}\n                style={{\n                    content: {\n                        border: 0,\n                        top: '50%',\n                        left: '50%',\n                        right: 'auto',\n                        bottom: 'auto',\n                        marginRight: '-50%',\n                        transform: 'translate(-50%, -50%)'\n                    }\n                }}\n            >\n                <DeletePersonConfirm deletePerson={this.props.deletePerson} person={this.state.personToBeDeleted} closeModal={this.closeModal} />\n            </Modal>\n        </div>\n    };\n}","import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\n\nconst PersonForm = (props) => {\n    yup.setLocale({\n        mixed: {\n            default: 'Não é válido',\n            required: 'Campo obrigatório',\n            date: 'Data inválida',\n        },\n        string: {\n            email: 'E-mail inválido'\n        }\n    });\n    const schema = yup.object().shape({\n        id: yup.number().notRequired(),\n        gender: yup.string().notRequired(),\n        nationality: yup.string().notRequired(),\n        placeOfBirth: yup.string().notRequired(),\n        name: yup.string().required(),\n        email: yup.string().email(),\n        birthDate: yup.string().required(),\n        cpf: yup.string().required()\n    });\n\n    const { register, errors, handleSubmit } = useForm({\n        resolver: yupResolver(schema)\n    });\n\n    const [errorsFromBackEnd, setErrorsFromBackEnd] = React.useState([]);\n    const onSubmit = data => {\n        let errorsFromRequest = props.savePerson(data);\n        errorsFromRequest.then(errors => {\n            let obj = {};\n            Object.keys(errors).forEach(function (prop) {\n                obj[prop] = { message: errors[prop]}\n                setErrorsFromBackEnd(obj)\n            })\n        })\n    }\n\n    const currentPerson = props.person;\n    const [person, setPerson] = React.useState(currentPerson);\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setPerson({ ...person, [name]: value });\n    }\n\n    return (\n        <div className=\"mt-10 sm:mt-0\">\n            <div className=\"md:grid\">\n                <div className=\"mt-5 md:mt-0 md:col-span-2\">\n                    <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\n                        <div className=\"shadow overflow-hidden sm:rounded-md\">\n                            <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                <div className=\"grid grid-cols-6 gap-6\">\n                                    <div className=\"col-span-6 sm:col-span-3\">\n                                        <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Nome</label>\n                                        <input\n                                        defaultValue={currentPerson.name}\n                                        onChange={handleChange}\n                                        maxLength=\"255\"\n                                        type=\"text\"\n                                        name=\"name\"\n                                        id=\"name\"\n                                        ref={register}\n                                        autoComplete=\"given-name\"\n                                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\" />\n                                        <p className=\"text-red-500\">{errors.name?.message}</p>\n                                    </div>\n                                    <div className=\"col-span-6 sm:col-span-3\">\n                                        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">E-mail</label>\n                                        <input\n                                        defaultValue={currentPerson.email}\n                                        onChange={handleChange}\n                                        maxLength=\"255\"\n                                        type=\"text\"\n                                        name=\"email\"\n                                        id=\"email\"\n                                        ref={register}\n                                        autoComplete=\"email\"\n                                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\" />\n                                        <p className=\"text-red-500\">{errors.email?.message}</p>\n                                    </div>\n                                    <div className=\"col-span-6 sm:col-span-3\">\n                                        <label htmlFor=\"gender\" className=\"block text-sm font-medium text-gray-700\">Sexo</label>\n                                        <select\n                                        defaultValue={currentPerson.gender}\n                                        onChange={handleChange}\n                                        id=\"gender\"\n                                        ref={register}\n                                        name=\"gender\"\n                                        autoComplete=\"gender\"\n                                        className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n                                            <option value=\"\"></option>\n                                            <option value=\"F\">Feminino</option>\n                                            <option value=\"M\">Masculino</option>\n                                            <option value=\"NI\">Indefinido</option>\n                                        </select>\n                                    </div>\n                                    <div className=\"col-span-6 sm:col-span-3\">\n                                        <label htmlFor=\"birthDate\" className=\"block text-sm font-medium text-gray-700\">Data de nascimento</label>\n                                        <input\n                                            max={new Date().toISOString().split('T')[0]}\n                                        defaultValue={currentPerson.birthDate}\n                                        onChange={handleChange}\n                                        type=\"date\"\n                                        name=\"birthDate\"\n                                        id=\"birthDate\"\n                                        ref={register}\n                                        autoComplete=\"birthDate\"\n                                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\" />\n                                        <p className=\"text-red-500\">{errors.birthDate?.message}</p>\n                                        <p className=\"text-red-500\">{errorsFromBackEnd.birthDate?.message}</p>\n                                    </div>\n                                    <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                        <label htmlFor=\"placeOfBirth\" className=\"block text-sm font-medium text-gray-700\">Naturalidade</label>\n                                        <input\n                                        defaultValue={currentPerson.placeOfBirth}\n                                        onChange={handleChange}\n                                        maxLength=\"255\"\n                                        type=\"text\"\n                                        name=\"placeOfBirth\"\n                                        id=\"placeOfBirth\"\n                                        ref={register}\n                                        autoComplete=\"street-address\"\n                                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\" />\n                                    </div>\n\n                                    <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                        <label htmlFor=\"nationality\" className=\"block text-sm font-medium text-gray-700\">Nacionalidade</label>\n                                        <input\n                                        defaultValue={currentPerson.nationality}\n                                        onChange={handleChange}\n                                        maxLength=\"255\"\n                                        type=\"text\"\n                                        name=\"nationality\"\n                                        id=\"nationality\"\n                                        ref={register}\n                                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\" />\n                                    </div>\n\n                                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-3\">\n                                        <label htmlFor=\"cpf\" className=\"block text-sm font-medium text-gray-700\">CPF</label>\n                                        <input\n                                        defaultValue={currentPerson.cpf}\n                                        onChange={handleChange}\n                                        maxLength=\"11\"\n                                        type=\"text\"\n                                        name=\"cpf\"\n                                        id=\"cpf\"\n                                        ref={register}\n                                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\" />\n                                        <p className=\"text-red-500\">{errors.cpf?.message}</p>\n                                        <p className=\"text-red-500\">{errorsFromBackEnd.cpf?.message}</p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                                <button\n                                    onClick={() => props.closeModal()}\n                                    className=\"mb-4 mr-2 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\">\n                                    Cancelar\n                                </button>\n                                <input value=\"Salvar\" type=\"submit\" className=\"cursor-pointer inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 cursor-default\" />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PersonForm;","import React from 'react';\nimport bcrypt from 'bcryptjs';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport PersonList from './components/PersonList';\nimport PersonForm from './components/PersonForm';\n\nModal.setAppElement('#root');\n\nconst App = () => {\n    const apiPath = '/api/v1/persons';\n    const axiosConfig = { auth: { username: 'admin', password: 'admin'}};\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    const [persons, setPersons] = React.useState([]);\n    const [currentPerson, setCurrentPerson] = React.useState({});\n    const openModal = () => setIsOpen(true)\n    const closeModal = () => setIsOpen(false)\n\n    const loadPersons = () => {\n        axios.get(apiPath, axiosConfig)\n            .then(res => {\n                setPersons(res.data);\n                closeModal()\n            })\n    }\n\n    const deletePerson = (personId) => {\n        axios.delete(apiPath + '/' + personId, axiosConfig)\n            .then(res => {\n                loadPersons()\n            })\n    }\n\n    const savePerson = person => {\n        let verb = \"post\";\n        if (currentPerson.id) {\n            person.id = currentPerson.id\n            verb = \"put\";\n        }\n        return axios[verb](apiPath + (verb === 'put' ? '/' + currentPerson.id : ''), person, axiosConfig)\n            .then(res => {\n                loadPersons()\n                return []\n            })\n            .catch(function(error) {\n                if (error.response) {\n                    return Object.assign({}, error.response.data);\n                }\n            })\n    }\n\n    const handleCreateButton = () => {\n        setCurrentPerson({});\n        openModal();\n    }\n\n    return (\n        <div>\n            <nav className=\"bg-gray-800\">\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                    <div className=\"flex items-center justify-between h-16\">\n                        <div className=\"-mr-2 flex md:hidden\"></div>\n                    </div>\n                </div>\n            </nav>\n            <header className=\"bg-white shadow\">\n                <div className=\"max-w-10xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                    <h1 className=\"text-3xl font-bold text-gray-900\">\n                        Cadastro de pessoas\n                    </h1>\n                </div>\n            </header>\n            <main>\n                <div className=\"max-w-10xl mx-auto py-6 sm:px-6 lg:px-8\">\n                    <div className=\"px-4 sm:px-0\">\n                        <button onClick={() => handleCreateButton() } type=\"button\" className=\"mb-4 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                            Criar\n                        </button>\n                        <PersonList\n                        persons={persons}\n                        setCurrentPerson={setCurrentPerson}\n                        openModal={openModal}\n                        loadPersons={loadPersons}\n                        deletePerson={deletePerson}\n                        />\n                    </div>\n                </div>\n                <Modal\n                    isOpen={modalIsOpen}\n                    onRequestClose={closeModal}\n                    style={{\n                        content: {\n                            top: '50%',\n                            left: '50%',\n                            right: 'auto',\n                            bottom: 'auto',\n                            marginRight: '-50%',\n                            transform: 'translate(-50%, -50%)'\n                        }\n                    }}\n                >\n                    <PersonForm savePerson={savePerson} person={currentPerson} closeModal={closeModal}/>\n                </Modal>\n            </main>\n        </div>\n    )\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n)"],"sourceRoot":""}